mutate_at(vars(yhat, y), ~ifelse(., "TRUE", "FALSE")) %>%
metrics(y, yhat)
?sens
?spec
spec
metrics = metric_set(sens, spec)
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y), ~ifelse(., "TRUE", "FALSE")) %>%
metrics(y, yhat)
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y), ~ifelse(., "TRUE", "FALSE")) %>%
metrics(truth=y, estimate=yhat)
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y),
~ifelse(., "TRUE", "FALSE") %>%
factor()) %>%
metrics(truth=y, estimate=yhat)
?factor
as.factor(c(0,0,1))
as.factor(c(1,0,0))
as.factor(c(T,F,F))
as.factor(c(F,T,T))
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y), as.factor) %>%
metrics(truth=y, estimate=yhat)
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y), as.factor) %>%
glimpse()
pp = tibble(
p = runif(100),
y = rbinom(100,1,0.5)==1
)
metrics = metric_set(sens, spec)
pp %>%
mutate(yhat = p>0.5) %>%
mutate_at(vars(yhat, y), as.factor) %>%
metrics(truth=y, estimate=yhat)
as.factor(c(F,T,T)) %>% levels
install.packages('knittr')
install.packages('knitr')
install.packages('tidyverse')
?facet_wrap
library(tidyverse)
?facet_wrap
?facet_grid
?vars
poly = read_csv("https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/advance-2021/data/poly.csv") # reading another csv file
genes = read_csv("https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/advance-2021/data/lupusGenes.csv")
ggplot(genes) +
geom_point(aes(x = RSAD2, y = IFI44)) +
facet_wrap(vars(phenotype), nrow = 2)
ggplot(genes) +
geom_point(aes(x = RSAD2, y = IFI44)) +
facet_wrap((phenotype), nrow = 2)
ggplot(genes) +
geom_point(aes(x = RSAD2, y = IFI44)) +
facet_wrap(vars(phenotype), nrow = 2)
ggplot(genes) +
geom_point(aes(x = RSAD2, y = IFI44)) +
facet_grid(rows=vars(phenotype), cols=vars(gender))
?sample_n
?sample_frac
slice_sample(gtex_data, 5)
months_str = c("spring", "summer", "fall", "winter") # string vector
months_str
months_fct = fct(months_str) # factor vector
months_fct
c(months_fct, "Jan")
fct_c(months_fct, "Jan")
fct_c(months_fct, fct("Jan"))
?fct_c
months_fct[1] = "Jan"
seasons_str[1] = "Jan"
seasons_str = c("spring", "summer", "fall", "winter") # string vector
seasons_str
seasons_fct = fct(seasons_str) # factor vector
seasons_fct
seasons_str[1] = "Jan"
seasons_fct[1] = "Jan"
read_csv("x,y\n1,'a,b'")
v1 = c(0,1)
v2 = c(FALSE, TRUE)
v3 = c("FALSE", "TRUE")
v4 = fct(v3)
fct(c2)
fct(v2)
v1 = c(0,1)
v2 = c(FALSE, TRUE)
v3 = c("FALSE", "TRUE")
v4 = fct(v3)
v1 + 1
v2 + 1
v3 + 1
numbers = c(1,2,3)
numbers[1] = 'a'
numbers + 2
?inner_join
?cols
gtex_samples_time_link = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/af6056f9a8d999a80fd787f89aa3483157d43681/data/gtex_metadata/gtex_samples_time.csv"
gtex_tissue_month_link = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/9e4fb21ccf93a83e2b6004b9aa467426806f8589/data/gtex_metadata/gtex_tissue_month_year.csv"
gtex_samples_by_month = read_csv(file = gtex_samples_time_link, col_types = cols())
gtex_tissue_month =
read_csv(file = gtex_tissue_month_link) %>%
filter(tissue %in% c("Blood", "Heart", "Liver", "Lung"))
head(gtex_tissue_month, 2L)
gtex_samples_by_month =
read_csv(file = gtex_samples_time_link, col_types = cols())
head(gtex_samples_by_month, 2L)
gtex_samples_time_link = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/af6056f9a8d999a80fd787f89aa3483157d43681/data/gtex_metadata/gtex_samples_time.csv"
gtex_tissue_month_link = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/9e4fb21ccf93a83e2b6004b9aa467426806f8589/data/gtex_metadata/gtex_tissue_month_year.csv"
gtex_samples_by_month = read_csv(file = gtex_samples_time_link)
gtex_tissue_month =
read_csv(file = gtex_tissue_month_link) %>%
filter(tissue %in% c("Blood", "Heart", "Liver", "Lung"))
head(gtex_tissue_month, 2L)
gtex_samples_by_month =
read_csv(file = gtex_samples_time_link)
head(gtex_samples_by_month, 2L)
?across
gtex_samples_by_month
gtex_samples_time_link
gtex_tissue_month
gtex_tissue_month_link
files = list(
samples = "gtex_samples_time.csv",
tissues = "gtex_tissue_month_year.csv",
dates = "gtex_dates_clean.csv"
)
url_start = "raw.githubusercontent.com/alejandroschuler/r4ds-courses/9e4fb21ccf93a83e2b6004b9aa467426806f8589/data/gtex_metadata/"
url_start %>%
str_c(files)
url_start %>%
str_c(files) %>%
read_csv
url_start = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/9e4fb21ccf93a83e2b6004b9aa467426806f8589/data/gtex_metadata/"
url_start %>%
str_c(files) %>%
read_csv
url_start %>%
str_c(files) %>%
map(read_csv)
url_start = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/summer-2023/data/gtex_metadata/"
files = list(
samples = "gtex_samples_time.csv",
tissues = "gtex_tissue_month_year.csv",
dates = "gtex_dates_clean.csv"
)
url_start %>%
str_c(files) %>%
map(read_csv)
data_frames = url_start %>%
str_c(files) %>%
map(read_csv)
data_frames
read_gtex = function(file) {
str_c(url_start, file) %>%
read_csv()
}
files %>%
map(read_gtex)
data_frames %>%
map_dbl(nrow)
count_rc = function(df) {
tibble(
n_rows = nrow(df)
n_cols = nrow(df)
count_rc = function(df) {
tibble(
n_rows = nrow(df),
n_cols = nrow(df)
)
}
data_frames %>%
map_df(count_rc)
count_rc = function(df) {
tibble(
n_rows = nrow(df),
n_cols = ncol(df)
)
}
data_frames %>%
map_df(count_rc)
?nrow
ncol
a = c(1,2,3)
b = c(4,5,6)
runif(10, a[1], b[1])
runif(10, a[2], b[2])
runif(10, a[3], b[3])
a = c(1,2,3)
b = c(2,3,4)
runif(10, a[1], b[1])
runif(10, a[2], b[2])
runif(10, a[3], b[3])
list(
a = c(1,2,3)
b = c(2,3,4)
list(
a = c(1,2,3),
b = c(2,3,4)
) %>% pmap(
\(a,b) runif(10,a,b)
)
?expand_grid
expand_grid(
a = c(1,2,3),
b = c(10,11)
)
list(
mean = c(-1, 0, 1),
sd = c(1,2)
) %>%
cross_df() %>%
pmap(function(mean, sd){
tibble(
sample = rnorm(mean=mean, sd=sd, n=3),
mean = mean,
sd = sd)
}) %>%
bind_rows()
files = list(
samples = "gtex_samples_time.csv",
tissues = "gtex_tissue_month_year.csv",
dates = "gtex_dates_clean.csv"
)
data_frames = list(NA, NA, NA)
for (i in 1:3) {
data_frames[[i]] = read_csv(str_c(url_start, files[[i]]))
}
names(files)
data_frames
files %>%
str_c(url_start) %>%
map(read_csv)
url_start %>%
str_c(files) %>%
map(read_csv)
'a':'f'
reps = 1:100
files = c('a','b','c','d','e','f')
expand_grid(
reps = 1:100
files = c('a','b','c','d','e','f')
expand_grid(
reps = 1:100
files = c('a','b','c','d','e','f'),
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
pmap(tibble())
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
pmap(\(...) tibble())
dfs = expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
pmap(\(...) tibble())
rand
sample
sample.int(5)
sample.int(5)
sample.int(1)
sample.int(1)
sample.int(5, size=1)
sample.int(5, size=1)
sample.int(5, size=1)
sample.int(5, size=1)
tibble(matrix(5*2,5,2))
n=100
p=5
matrix(runif(n*p), n,p)
tibble(matrix(runif(n*p), n,p))
as_tibble(matrix(runif(n*p), n,p))
tibble(matrix(runif(n*p), n,p))
?tibble
tibble(matrix(runif(n*p), n,p), .name_repair='universal')
?make.names()
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
tibble() %>%
set_names(str_c('x',1:p)) %>%
write_csv(
str_c(dir,'/rep_',r,'/',f,'.csv')
)
}
gen_file('1','a',5)
runif(n*p) %>%
matrix(n,p) %>%
tibble() %>%
n
p
runif(n*p) %>%
matrix(n,p) %>%
tibble()
str_c('x',1:p)
runif(n*p) %>%
matrix(n,p) %>%
tibble() %>%
set_names(str_c('x',1:p))
runif(n*p) %>%
matrix(n,p) %>%
as_tibble()
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
as_tibble() %>%
write_csv(
str_c(dir,'/rep_',r,'/',f,'.csv')
)
}
gen_file('1','a',5)
data_dir = '~'
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
as_tibble() %>%
write_csv(
str_c(data_dir,'/rep_',r,'/',f,'.csv')
)
}
gen_file('1','a',5)
data_dir = '~/results'
dir.create(data_dir)
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
as_tibble() %>%
write_csv(
str_c(data_dir,'/rep_',r,'/',f,'.csv')
)
}
gen_file('1','a',5)
data_dir = '~/Desktop/results'
dir.create(data_dir)
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
as_tibble() %>%
write_csv(
str_c(data_dir,'/rep_',r,'/',f,'.csv')
)
}
gen_file('1','a',5)
?write_csv
write_csv(mtcars, "~/Desktop/mtcars.csv")
runif(n*p) %>%
matrix(n,p) %>%
as_tibble()
write_csv(mtcars, "~/Desktop/results/mtcars.csv")
write_csv(mtcars, "~/Desktop/results/rep_1/a.csv")
reps %>%
reps %>%
walk(~dir.create(str_c(data_dir,'/rep_',.)))
reps = 1:100,
reps %>%
walk(~dir.create(str_c(data_dir,'/rep_',.)))
reps = 1:100
files = c('a','b','c','d','e','f')
reps %>%
walk(~dir.create(str_c(data_dir,'/rep_',.)))
data_dir = '~/Desktop/results'
dir.create(data_dir)
reps = 1:100
files = c('a','b','c','d','e','f')
gen_file = function(r,f,p) {
n = sample.int(100, size=1)
runif(n*p) %>%
matrix(n,p) %>%
as_tibble() %>%
write_csv(
str_c(data_dir,'/rep_',r,'/',f,'.csv')
)
}
files %>%
map(\(f){
p = sample.int(10,size=1)
reps %>%
map(gen_file, f, p)
})
pwd
?glue
library(tidyverse)
?glue
dfs = expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
)
dfs = expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
dfs = expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
)
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
as
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
as_list
expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
as.list
dfs = expand_grid(
reps = 1:100,
files = c('a','b','c','d','e','f')
) %>%
as.list %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
dfs = expand_grid(
r = 1:100,
f = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
?glue
library(glue)
dfs = expand_grid(
r = 1:100,
f = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
url = "https://raw.githubusercontent.com/alejandroschuler/r4ds-courses/summer-2023/data/results"
dfs = expand_grid(
r = 1:100,
f = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv()
})
dfs = expand_grid(
r = 1:20,
f = c('a','b','c','d','e','f')
) %>%
pmap(\(r,f){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv(col_types = cols())
})
dfs
f = 'a'
df_a = map_df(\(r){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv(col_types = cols()) %>%
mutate(rep = r)
})
df_a = reps %>%
map_df(\(r){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv(col_types = cols()) %>%
mutate(rep = r)
})
df_a = 1:20 %>%
map_df(\(r){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv(col_types = cols()) %>%
mutate(rep = r)
})
df_a
dfs = c('a','b','c') %>%
map(\(f){
1:20 %>%
map_df(\(r){
glue("{url}/rep_{r}/{f}.csv") %>%
read_csv(col_types = cols()) %>%
mutate(rep = r)
})
})
dfs
install.packages('zeallot')
